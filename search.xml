<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一次良心售后</title>
      <link href="/2019/10/23/apple-service/"/>
      <url>/2019/10/23/apple-service/</url>
      
        <content type="html"><![CDATA[<p>今年年初的时候，我的 2017 款 MacBook Pro（乞丐版）键盘出了一些问题，<br>主要表现是方向键的上键出现了咔咔咔的声音，每按一次就火大一次。<br>后来下键也出现问题了，反弹无力，软绵绵的。<br>不过由于我大部分时间都在用外接键盘，<br>所以就一直没处理（这次并不是因为穷，因为我早就知道了 MacBook Pro 的键盘服务计划）。</p><img class="img-fluid" src="/images/apple-service/01.jpg" width="500px" title="Apple 官网的服务计划"><p>由于前段时间服务器不太稳定，经常需要半夜在家里处理问题，躺在床上只能用自带键盘，<br>这导致我的火越来越大，终于忍不住了，于是就在官方的 Apple 支持 APP 上预约了键盘维修。</p><blockquote><p>PS：我事先特意上官网看了一下，确认应该不是我的问题，因为我的自带键盘用得还是很少的，所以才敢预约。😂😂😂</p></blockquote><p>原以为换个键盘很简单，所以我也没准备，第一次去的时候说是可能要 3～5天检测和维修时间，<br>要我先备份一下资料，于是重新预约了国庆期间去。</p><p>第二次去直接把电脑放那去了，说是要先检测，如果没问题就直接给我换了，<br>如果有问题（也就是人为问题比如说进水了）会先告知我维修费用再跟我确认是否维修。<br>第二天没收到消息，我估计稳了。果然，第三天收到通知说维修已经完成可以去取了。<br>这说明确实不是我的问题，同时也说明 Apple 还是蛮良心的。</p><p>看到维修单，发现不仅仅是键盘，连电池等都换了，估计是因为集成度太高，仅仅只换键盘人工费用太高，<br>所以就直接全换了，用户需要支付的金额为0，嗯，很良心。</p><img class="img-fluid" src="/images/apple-service/02.jpg" width="500px" title="维修记录副本"><p>根据我的这次经历，关于这个键盘服务计划需要注意的是：</p><ol><li>键盘非人为损坏（如进水等）；</li><li>购买之日起 4年内（官方人员跟我说的，但官网上没说，不过笔记本用 4年也差不多该换了）；</li><li>根据一些网友的经历，可能需要发票，所以我带了发票，但没跟我要，所以也就没拿出来；</li><li>换了键盘之后，因为其他一些硬件也换了，所以一些付费软件识别到硬件变动取消授权了，导致我又要重新输入激活码，比如 Downie 3。</li></ol><p>除了这次换键盘，之前还换过 iPad 的充电器，iPhone 7 的电池，总的来说，虽然每次都要预约感觉节奏慢了一点，但售后体验还是蛮好的。</p><img class="img-fluid" src="/images/apple-service/03.jpg" width="500px" title="Apple 官网技术支持首页"><p>话说 Apple 官网技术支持页面直接列出了各种更换和维修扩展计划，也就是自己的屁股自己擦。我看了一下其他主流手机厂商们的官网，发现他们都没有，难道是他们品控真的辣么优秀从来不出问题？</p><p>非也。</p><p>想当年，某爱国厂商爆出闪存门事件，不仅不承认错误，还说这是“业界通用”做法，关于事件详细的经过，可以参考这篇文章：</p><img class="img-fluid" src="/images/apple-service/04.jpg" width="500px" title="链接地址 https://zhuanlan.zhihu.com/p/26508723"><p>更多可以看知乎上的下面两个问题：</p><ul><li><a href="https://www.zhihu.com/question/58645911" target="_blank" rel="noopener">如何评论华为官方对闪存事件的回复？</a></li><li><a href="https://www.zhihu.com/question/58744564" target="_blank" rel="noopener">如何评价余承东回应华为P10缺疏油层和闪存配置不同的解释？</a></li></ul><p>其他厂商的那些往事比如小米 Note 2 的抹布屏等等就不一一枚举了，有兴趣的可以搜一搜每年的手机厂商质量问题盘点，顺便可以看看有几家厂商做了良心售后的。</p><p>顺便贴一下其他主流手机厂商的技术支持首页，证明我确实都看过一遍了 ： </p><ul><li><a href="https://www.samsung.com/cn/support/" target="_blank" rel="noopener">https://www.samsung.com/cn/support/</a></li><li><a href="https://www.vivo.com.cn/service.html" target="_blank" rel="noopener">https://www.vivo.com.cn/service.html</a></li><li><a href="https://www.oppo.com/cn/service.html" target="_blank" rel="noopener">https://www.oppo.com/cn/service.html</a></li><li><a href="https://www.mi.com/service" target="_blank" rel="noopener">https://www.mi.com/service</a></li><li><a href="https://consumer.huawei.com/cn/support/" target="_blank" rel="noopener">https://consumer.huawei.com/cn/support/</a></li></ul><p>利益相关：Apple 产品用户，非果粉。</p><p>如有跟我一样问题的用户，可以<a href="https://support.apple.com/zh-cn/keyboard-service-program-for-mac-notebooks" target="_blank" rel="noopener">点击此链接</a>，看 Apple 官网关于本计划的详细说明。</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用手机设计指南</title>
      <link href="/2019/09/18/how-to-design-phone/"/>
      <url>/2019/09/18/how-to-design-phone/</url>
      
        <content type="html"><![CDATA[<p>前年年底 iPhone X 发布的时候，我就打算写篇博客从普通用户的角度吐槽一下时下的手机设计，但转念一想，国内的手机厂商们肯定会纷纷效仿，到时候槽点更多，喷起来更爽，于是一憋就憋了快两年（其实根本原因是懒）。</p><img class="img-fluid" src="/images/how-to-design-phone/01.jpg" width="500px"><p>今年年初的时候，在 V2EX 上看到一篇帖子，甚合我意，当时就截了图，准备开喷，结果又因为懒癌发作，拖延至今。前几天刚好 iPhone 11 发布，感觉我的话题又丰富了许多，所以今天，我决心要把这个坑给填了。</p><p>首先我要声明我的“手机观”，即手机是一种工具，不是艺术品，也不是奢侈品，更不是装饰品，跟锤子一样，是一种工具，一种让我的生活更加便捷的工具。我知道我这种观点很多人不会赞同，但没关系，本文的目的是告诉手机厂商们如何设计一款实用的手机，而不是一款畅销的手机。</p><img class="img-fluid" src="/images/how-to-design-phone/02.jpg" width="500px"><p>这三年来手机最大的变化就是屏幕，大家都在拼屏占比。虽然小米 MIX 不是第一款“全面屏”概念的手机，但这一波确实是 Mix 带起来的节奏。本来 MIX 系列作为小米的量产概念机，给极客们尝尝鲜就好，结果是一发不可收拾。手机厂商们一看“全面屏”概念这么香，立马像一群苍蝇一样一拥而上（当时主流厂商除了三星）。刘海屏、水滴屏、鼻孔屏、通过弹出式摄像头实现的“真全面屏”，争相斗艳，各显奇葩。</p><img class="img-fluid" src="/images/how-to-design-phone/03.jpg" width="500px"><p>问题是全面屏为了极致的屏占比带来了很多问题，牺牲了前置摄像头，牺牲了听筒，牺牲了传感器，牺牲了导航栏/Touch ID，给用户带来了极大的不便，比如当时的小米 Mix 在视频聊天的时候就得把屏幕倒过来。有些设计大大提升了成本，并且同时提升了故障率，比如 OV 的弹出式摄像头设计。</p><p>然而手机厂商才不管这些，他们要的是卖得更多，因为愚蠢的消费者们更愿意为炫酷的全面屏买单，而不是实用性买单。卖的更多才能有钱去研发屏占比更大更炫酷的手机，然后才会有更多的愚蠢的消费者们买单。</p><img class="img-fluid" src="/images/how-to-design-phone/04.jpg" width="500px"><p>顺便说一下三星的曲面屏，用了一年的 Note 9（因为太喜欢 Note 8，所以我成了最早预订 Note 9 的那批用户），给我的感受是，虽然看得爽了，但不带套非常容易误触（我不喜欢戴套），尤其是玩王者荣耀的时候，我的左手食指经常误触到小地图，导致屏幕乱飞，非常影响玩游戏的心情。</p><img class="img-fluid" src="/images/how-to-design-phone/05.jpg" width="500px"><p>其次是摄像头。此次 iPhone 11 发布，背面的浴霸被网友喷成了狗，没办法，本来正面就丑，现在背面不甘示弱，当然也有可能是不甘寂寞，跟着一起丑，被喷也是正常的。其他厂商的设计好一点，没那么难看，但趋势都一样，孔越来越多。</p><p>PS：顺便说个题外话，苹果这次没有上 5G 说明还是对用户负责的。我个人认为 5G 两三年内不会有什么前途，所以现在买手机无需考虑 5G，太鸡肋。</p><p>很多用户追求手机拍照质量，可以理解，但手机毕竟是手机，拍照并不是最重要的功能，更何况大多数拍照片的都是用的前置摄像头，所以没必要在背面挖那么多孔（退一步讲，即使挖也不能挖这么丑啊！）。我的建议是可以花些力气搞一搞拍照，但没必要花那么大力气，毕竟所有厂商的研发资金都是有限的。对摄影真有追求的，应该去用单反，而不是用手机。</p><img class="img-fluid" src="/images/how-to-design-phone/06.jpg" width="500px"><p>再说个极端的例子。华为 P30 所谓的“拍月亮”，经网友严格测试，发现原来用的是一种高级的 P 图技术，这种做法就是完全走了邪路，入了魔道，此处不再赘述，有兴趣的可以自己上知乎搜索相关的话题。</p><p>最后来说一说手机外壳的材质。现在主流的材质就是玻璃、金属、陶瓷（小米旗舰机型用得比较多），极少有旗舰机用塑料。我认为塑料才是手机外壳的最优解。作为一款每天都要使用的消费电子产品，少则一两年，多则三五年就要换新，塑料再适合不过。</p><p>用玻璃，容易摔碎，一碎就要大出血；用金属，冬天冰手，夏天烫手，春秋滑手（手干的时候，感觉我的 iPhone 7 随时都会滑出去），还有点重，并且对信号还有负面影响；用陶瓷更坑，对于厂商来说良品率低成本高，对于用户来说跟玻璃一样容易碎（所以除了小米也没几家用的）。所以这三种材质，都不适合做手机外壳。</p><img class="img-fluid" src="/images/how-to-design-phone/07.jpg" width="500px"><p>相比之下，塑料的优点就很明显了，质量够轻，韧性够强，冬暖夏凉，优秀的工艺能让塑料的触感不逊于前三者，比如当年诺基亚的 Lumia 系列。唯一的缺点就是让消费者感觉廉价，厂商们就很难忽悠钱了。对于商业来讲，这确实是硬伤，因为愚蠢的用户们从来只是看价格，而不是看价值。</p><img class="img-fluid" src="/images/how-to-design-phone/08.jpg" width="500px"><p>其他材质如皮革、竹子、木头等由于非主流这里就不说了（话说我一直觉得 ThinkPad 用的碳纤维材质很不错，虽然成本略高，但手机也用不了多少啊，不知道为什么没有目前还没有厂商推出）。</p><p>以上就是我对现在手机设计的一些看法，简单总结一下我提出的三个建议：</p><ol><li>不要为了极致的屏占比牺牲其他硬件；</li><li>不要为了极致的拍照把背面搞成马蜂窝；</li><li>不要为了卖高价而舍弃最适合的材质。</li></ol><p>符合这三点的手机才是真正为用户考虑的手机。</p><p>当然，悲哀的是，不会有任何一家厂商会为用户考虑，他们只会为销售考虑。愚蠢的消费者们也不会为自己考虑，因为他们根本不知道正确的设计是什么样的，厂商们的海军让他们只关注卖点，而不关注自己的需求。</p><p>毕竟“自古深情留不住，唯有套路得人心”。</p><p>写到这里，不知道为什么突然有一种 “秦人不暇自哀，而后人哀之；后人哀之而不鉴之，亦使后人而复哀后人也。” 的感觉……</p><p>本来我最初的宏伟计划是把所有厂商的所有机型都喷一遍，然后把我的理想设计有层次带结构地描述一遍，但夜已深，实在是喷不动了，也写不动了，只能挑三个重点随便喷喷了，就这样吧。</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 因吹斯汀 </tag>
            
            <tag> phone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>到底是阈值还是阀值？</title>
      <link href="/2019/03/11/threshold/"/>
      <url>/2019/03/11/threshold/</url>
      
        <content type="html"><![CDATA[<img class="img-fluid" src="/images/threshold/01.jpg" width="500px" title="Apple 官网的服务计划"><p>当然是阈值（yuzhi）！每次听人说“阀值”“阀值”就要发狂。</p><p>没有“阀值（fazhi）”这个词！<br>没有“阀值（fazhi）”这个词！<br>没有“阀值（fazhi）”这个词！</p><p>重要的事情说三遍！</p><p>工作以前根本没听说过 “阀值（fazhi）”，工作以后经常听到，一开始没听懂，后来专门研究了一下，发现根本没有这个词。</p><p>有一个说法是，建国后大学里的文科的教授们用阈值，理工科的教授们用“阀值”，所以用错的一般都是理工科毕业的学生。</p><p>我一想还真可能是，我的专业是文科的，我在大学时，老师们确实都是用的阈值；而那些用错的，我问是不是理工科的，都说是。</p><p>抄一段知乎网友的话：</p><blockquote><p>valve 和 threshold 在工业上都是常用的术语。<br>valve（阀）是控制系统中的组件，而 threshold（阈值）这个则是测量中的信号点。<br>看着像，区别老大了，所以才更要用不同的字翻译，防止有人把它俩搞混成一个东西。</p></blockquote><p>由此可见，很可能是当年建国前后搞理工科的那些人，有个大佬用了错别字，于是后面的人也跟着用了（文科太差）。。“阀” 一般是“阀门”的意思，容易让人想当然，然而阀门跟临界值并不是一回事。</p><p>对于说“阀值（fazhi）”的人，我推荐看看这篇知乎问答：<a href="https://www.zhihu.com/question/20642950" target="_blank" rel="noopener">https://www.zhihu.com/question/20642950</a> 。<br>我不是为了输赢，我只是认真。</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 因吹斯汀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 升级到 Mojave 的经历</title>
      <link href="/2019/02/21/macos-mojave/"/>
      <url>/2019/02/21/macos-mojave/</url>
      
        <content type="html"><![CDATA[<p>去年国庆长假后，有个同事问我有没有升级  Mojave，我说没有，立马打开 App Store 一看，瞬间就不淡定了…</p><img class="img-fluid" src="/images/macos-mojave/01.jpg" width="500px"><p>对于我来说，比较有吸引力的几个功能如下：</p><ul><li>Dark Mode/黑暗主题</li><li>Finder 增强</li><li>截图功能加强</li><li>动态桌面</li><li>桌面堆栈</li></ul><p>尤其是黑暗主题，终于可以和我灰色的 MBP 契合了。</p><p>下班后，手痒难耐，明知 macOS 升级的故障率很高（不过之前我自己没遇到过大问题），终究耐不住寂寞，还是升级了。</p><p>一切顺利，大概将近一个小时，终于更新完毕，完美，选择了深色主题，UI 颜值提升了许多。</p><p>用了一会，终于还是发现一个很严重的问题：“隐私”-“辅助功能”-“允许下面的应用控制您的电脑” 里的所有应用都不见了，手动添加也添加不进去！这么严重的 Bug 竟然都没发现…</p><p>于是我的窗口控制应用 Moom 妥妥地罢工了……</p><p>所有需要这个权限的应用都跪了……</p><img class="img-fluid" src="/images/macos-mojave/02.jpg" width="500px"><p>网上搜了一圈，很多人都出现了这个问题，在知乎上 “如何评价 macOS Mojave 10.14？”  一堆人遇到的 bug 跟我一样。</p><img class="img-fluid" src="/images/macos-mojave/03.jpg" width="500px"><p>虽然系统本身功能不受影响，也不影响大多数第三方软件的操作，但严重影响了我的工作心情。</p><p>折腾了半个月后，实在是受不了了，最终备份数据格盘重新安装了 Mojave。</p><p>重新安装后，功能上一切良好，主要遇到的问题是黑暗主题下的不兼容。</p><p>比如 MySQLWorkbench（8.0.13 及之前的版本，从 8.0.14 版本开始已修复）等软件在黑暗主题下有 bug。</p><p>截止目前（2019年2月20日），我所使用的软件基本上都已经支持了新的暗黑主题。</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ol><li>macOS 升级需谨慎，做好数据备份工作；</li><li>目前已经很稳了，可以升级了。</li></ol><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ul><li><a href="https://www.zhihu.com/question/279832723/answer/499132061" target="_blank" rel="noopener">如何评价 macOS Mojave 10.14？</a></li><li><a href="https://dev.mysql.com/doc/relnotes/workbench/en/news-8-0-14.html" target="_blank" rel="noopener">Changes in MySQL Workbench 8.0.14 (2019-01-21, General Availability)</a></li><li><a href="https://macflow.net/p/635.html" target="_blank" rel="noopener">MacOS Mojave 新功能解析：从未如此强大的Finder</a> </li></ul>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>途牛原创双肩包初级体验</title>
      <link href="/2018/07/03/tuniu-backpack/"/>
      <url>/2018/07/03/tuniu-backpack/</url>
      
        <content type="html"><![CDATA[<p>欣闻我牛自主设计了一款双肩包，虽然我已经有了3个双肩包（都是500块以内的那种。。。），但 as a geek，我还是毅然决然地瞒着老婆买了一个体验一把。</p><p>看<a href="http://www.tuniu.com/web-mall/item/300130492" target="_blank" rel="noopener">官网</a>这货是长这样子的:</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1fsx5ryai1rj30b408cq3h.jpg" alt></p><p>下单后过了两天(由于缺货下单时是预订)衍生品的同事提醒我去拿货，拿到后被包装惊艳到了，这么厚的一个防震塑料袋，看起来好高端~</p><p><img src="https://ws4.sinaimg.cn/bmiddle/006tNc79gy1fsx5ybmv0gj30u0140tel.jpg" alt></p><p>然鹅，打开包装之后看起来就一般般了，没有惊喜。</p><p><img src="https://ws3.sinaimg.cn/bmiddle/006tNc79gy1fsx64by977j30u014079f.jpg" alt></p><p><img src="https://ws4.sinaimg.cn/bmiddle/006tNc79gy1fsx64tvruvj30u0140432.jpg" alt></p><p>途牛经典的 <strong>途牛黄+途牛黑</strong> 配色，整个包介于电脑包和普通双肩包之间，背部比较硬，不用担心掉到地上导致电脑受伤。</p><p>亮点是袋子比较多，看图。</p><p><img src="https://ws2.sinaimg.cn/bmiddle/006tNc79gy1fsx6772qtej30u0140adb.jpg" alt></p><p>这样看看不出可以放什么，我来上一张装了东西的体验图，继续看图。</p><p><img src="https://ws2.sinaimg.cn/bmiddle/006tNc79gy1fsx67n9a1yj30u0140n0v.jpg" alt></p><p>里面有两个可以放杯子或雨伞的类似于侧口袋的口袋，不过潮湿的雨伞可能就不太好放了……太大的雨伞比如小米的那款，估计放不下。</p><p><img src="https://ws1.sinaimg.cn/bmiddle/006tNc79gy1fsx68v58ebj30u0140jwj.jpg" alt></p><p>两侧还有侧口袋，以及背部有一个暗口袋（防盗口袋？），还蛮大的，看我的手就知道了，深度至少有包的一半宽度，至少可以放个两三万现金，很适合低调的土豪携巨款出游。</p><p><img src="https://ws1.sinaimg.cn/bmiddle/006tNc79gy1fsx6c01g3hj30u0140dka.jpg" alt><br><img src="https://ws4.sinaimg.cn/bmiddle/006tNc79gy1fsx6c1ds06j30u0140gpz.jpg" alt></p><p>至于背起来的效果。。。</p><p>嗯，虽然此前已经有同事提醒我说背起来像个乌龟壳，但我还是决定原谅它……</p><p><img src="https://ws4.sinaimg.cn/bmiddle/006tNc79gy1fsx6g8im9tj30u0140npd.jpg" alt></p><p>PS: 由于上个月理发不幸栽在一个学徒手里，我决定给我的发型打个码……</p><p>还有几张图随便看看吧~</p><p><img src="https://ws3.sinaimg.cn/bmiddle/006tNc79gy1fsx6i968lhj30u0140gpi.jpg" alt><br>顶部外口袋。</p><p><img src="https://ws3.sinaimg.cn/bmiddle/006tNc79gy1fsx6idarfxj30u0140adl.jpg" alt><br>侧口袋(两侧都有)。</p><p><img src="https://ws3.sinaimg.cn/bmiddle/006tNc79gy1fsx6ifsgpjj31400u0djs.jpg" alt><br>坐着时放腿上的效果(脑补坐地铁的时候…)。</p><p>说说缺点。比较不满意的是拉链设计，由于背部比较硬的那种设计，导致拉拉链的时候不是很顺畅，可能跟品控有关。这是目前感受出来的最明显的缺点。其他暂时没什么，以后有新的体会再来补。</p><p>不多说了，最近太忙，忙里偷闲写得这篇测评，下面总结一把。</p><p>总体来说 <code>179</code> 的这个价格比起小米都市双肩包来性价比要差许多，但不失为一款通勤包的可选项，毕竟口袋多还是蛮有用的，很适合我这种不喜欢把东西堆在一起的人。不过，由于太像乌龟壳以及拉链上的缺陷，我暂时不会把它作为我的主力包。。。</p><p>鉴定完毕。</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 因吹斯汀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/06/hello-world/"/>
      <url>/2018/05/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>经历了 CSDN、博客园、点点网、开源中国、WordPress、Hexo、Typecho，以及自己写的一个博客程序，最近听说 GitHub Pages 支持了 https，于是再次回到 Hexo，使用 GitHub Pages 重建了我的博客，估计以后也不会再折腾了。</p><p>这两年基本没写什么有价值的东西（虽然前几年基本也没写什么），只记了一些流水账，吐槽了一些坑爹的人和事。早期博客由于种种原因，丢失了一些，留下的一些现在看来觉得以前的自己好肤浅好傻X，觉得以前的自己傻X是一件好事，起码说明自己在进步，这也是写博客的意义之一吧。</p><p>以后尽量每月更新，记录自己的想法和做法，希望能帮助更多人。</p><p>PS: 如果把人坑了就不要怪我了，那不是我的本意 :)。</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 因吹斯汀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查找 FontAwesome 图标的正确姿势</title>
      <link href="/2017/08/13/fontawesome/"/>
      <url>/2017/08/13/fontawesome/</url>
      
        <content type="html"><![CDATA[<p>在做管理后台的时候，由于界面用的是 <a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">FontAwesome</a> 的图标，所以需要经常去找合适的图标。每次都很都疼，因为…</p><p>之前一直以为 FontAwesome 的图标搜索用的是精确搜索，就是直接根据 icon 的名字去匹配，所以懒得去用，一直都是猜测图标的名称然后在网页中 <code>Ctrl+F</code> 查找的，万万没想到…</p><p>原来人家的搜索是真正的搜索，不多说了，都是泪，先直接上图：</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fr26j0rityj30yg0cfjs1.jpg" alt="FontAwesome Search"></p><p>为了这个“实验室”的图标，我用 <code>Ctrl+F</code> 尝试了 <code>bottle</code>、<code>lab</code>、<code>labs</code>、<code>experiment</code>、<code>test</code> 等等等，都没查找到，最后没办法，一个个地找才找到，花费的时间超过 10分钟！我一怒之下决定写一个搜索的插件，项目脚手架都搭建好了，这时发现原来官方的搜索竟然就是这么好用！</p><p>泪奔~</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 因吹斯汀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次神奇的出差经历</title>
      <link href="/2017/07/12/a-business-trip/"/>
      <url>/2017/07/12/a-business-trip/</url>
      
        <content type="html"><![CDATA[<p>今天找资料无意中看到一些前年的照片，其中有几张是我在一次出差途中拍摄的，现在想来，那次出差非常有意思，值得花两个小时记录下来，等老了好跟孙子吹牛。</p><p>先来交代一下事情的背景吧。那时我就职于一家做教育产品的互联网公司，核心产品简单来说就是幼儿园版微信。虽然终端用户主要是幼儿家长，但主要面向幼儿园推广。有些幼儿园比较难搞，于是 CEO 有时候不得不许诺一些额外的东西，比如做个官网之类的。</p><p>有家嘉兴的幼儿教育培训机构，提出了要做一个网站，CEO 估计是迫于业绩压力，答应了。后来人家又要求部署到自己的服务器上（估计是因为官方背景），由于我们给人家做的网站是用我们的比较“高大上”的技术栈做的，对方的 IT 人员搞不定，要求我们派人去现场部署，并表示可以报销差旅费。</p><p>当时我们服务端有四五个人，不过能搞定这个事情的，估计只有我和 Leader，所以问题就简单了，只能我去了。Leader 舍不得工作日放我去，因为那时开发任务也比较紧张，CEO 一番讨价还价后，我自愿决定放弃双休，前往嘉兴帮 CEO “擦屁股”。CEO 打保票说，不会让你白跑一趟。</p><p>那是我职业生涯中第一次出差。周六一大早从南京南站坐高铁前往嘉兴，由于起床太早，在车上睡着了，于是悲剧了，我睡到了上海，出师不利啊！到嘉兴时已经是下午一点，然后把地址搞错，又折返了一程，到目的地的时候，已经快下午三点。</p><p>由于是周六，对方办公楼里看不到人。接待我的人带我到机房，机房是这个样子的（当然，这是后面部署中拍的图）</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fr25co2mtnj30yg0pigo3.jpg" alt="机房"></p><p>我一看机房没人，惊出一身冷汗。因为接待我的人（看起来像是一个即将退休的老男人）说自己不是搞技术的，有问题打某某某电话，然后给我一个红包转身就走了。</p><p>来之前，我意淫过各种美妙的场景，当然最多的还是一群年轻漂亮天真好奇的幼儿园女教师们围着我问这问那亦或是安静地一脸崇拜地看着我忙碌。然而我想多了，我身处几乎空无一人的办公大楼，面对的是几台嗡嗡嗡的服务器——这个就是现实与理想的差距啊。</p><p>我镇定下来，仔细观察了一下服务器。虽然我之前只接触过学校里的 Windows Server 和阿里云的 ECS，并且都是远程操作没有接触过真机，但凭着我当年在学校里给学姐学妹们数百台笔记本装系统、解决各种疑难杂症的经验，我自信这点小问题难不到我（还有谷歌百度可以用嘛）。</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fr25d0aitfj30qc0zktbg.jpg" alt="装了 Windows Server 2003 的服务器"></p><p>这是一台装了 Windows Server 2003 的 IBM xSeries 235 塔式服务器，内存 512M，是一台布满灰尘、十几年前就已经停产了的老古董，可以放在博物馆里的那种。情况非常美妙，因为我们的项目只能部署在 <code>*nix</code> 系统上，并且底层框架需要编译，512M 内存不够用，还得搞个交换分区。另外比较幸运的就是这台服务器可以访问外网。</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fr25db0ac1j30yg0piq6w.jpg" alt="满是灰的IBM服务器"></p><p>我出发前刻意带了两个优盘，一个刻了 32 位的 lunbuntu，一个刻了 64 位的 Ubuntu Server 版，机智如我。</p><p>于是打电话问了接待的人提供的 IT 电话，问能不能重装系统，对方说可以。立马掏出优盘插入，重启，进入启动项菜单，等等，怎么优盘识别不到？立即换接口，换优盘，等所有方案都试了一遍后发现，两个优盘在所有 USB 口上都不能识别。</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fr25djtme5j30py0jkgn9.jpg" alt="蛋碎了...."></p><p>蛋碎了……<br>此时我心中一万匹草泥马奔过……<br>千算万算还是失算了……</p><p>这时候我需要的是冷静。<br>仔细分析了一下，只剩下一条路可以走，就是使用光驱。当时的时间是 2015年12月12日的下午四点，在一个陌生的城市想要买空白光盘。这个时间点有点尴尬，掐指一算，我上次使用光盘应该是5年前了。看来一天搞定再玩一天的计划要落空了。</p><p>别无他法，只能拼人品了。</p><p>出了办公大楼，打开手机上的地图App，发现离市中心比较远，校区北面是一家沃尔玛，决定去碰碰运气。也许是那天人品大爆发，顺利地在超市里找到了 CD 和 DVD 空白盘，犹豫了一下，决定求稳，买了 CD。花了一个多小时，终于带着光盘回到了机房。</p><p>由于我的 MacBook 不带光驱，就电话找接待我的人，他让我去办公楼对面的宾馆前台，用前台的电脑。我跑过去说明了一下情况，用前台的电脑下载了系统的镜像，刻录光盘，为了求稳，我多刻了几张不同版本。从宾馆出来，天已经黑了，大楼里也就机房亮着灯，气氛诡异。我装着胆走进机房开始装系统，一切顺利。  </p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fr25dql3tzj30qc0zk0tr.jpg" alt="系统安装中"></p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fr25dxoh74j30qc0zkq5y.jpg" alt="配置系统软件源"></p><p>虽然刻了带桌面的 lubuntu，但安装失败，最终成功安装的是不带桌面的 Ubuntu server，只能用终端了。虽然系统部署也比较麻烦复杂，但相比重装系统，算是非常顺利。</p><p>安装系统的过程中，我在自己笔记本上写好部署的脚本，等系统安装好后做了一些基础的设置，然后在服务器上把脚本下载下来直接运行，分分钟搞定所有的部署，行云流水，一气呵成。</p><p>部署好后，我简单测试了一下，一切正常。于是留下了一张纸条，说明了情况，关门离去。</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fr25e4m72mj30iq0t6myi.jpg" alt="留的纸条说明"></p><p>到了酒店已是晚上十点。<br>第二天在嘉兴市中心逛了一圈后坐绿皮火车回到南京。</p><p>这次出差的神奇之处就在于，我出发前对对方的情况一无所知，甚至连具体的地点在哪都不知道，之前也没有任何进机房的经验。一路虽磕磕绊绊，但最终还算圆满地完成了任务，没有给公司丢脸。现在想来，应该归功于人品吧。</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 因吹斯汀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>改变世界的不是技术，而是运用技术的能力</title>
      <link href="/2017/07/12/bullshitting01/"/>
      <url>/2017/07/12/bullshitting01/</url>
      
        <content type="html"><![CDATA[<blockquote><p>改变世界的不是技术，而是运用技术的能力。作为一个程序员，技术很容易取得，运用的能力却没那么容易。正如少林扫地僧所说，武功越高，越需要相应的佛法化解其戾气，如若不然，就会反噬自身。我看到太多的程序员，一心钻研新技术，寻求百亿并发的解决之道，一上来就是去中心化，满嘴跑火车，却不关心自己的产品有多少人用，不关心如何将现有的技术发挥到极致。</p></blockquote><p>这段话是我在手机上码的，当时我正处于暴走状态，本来准备写完发个朋友圈的，但怕朋友突然的关心，所以没发。好在我的博客没什么人看，就发这里了。</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吐槽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论软件工程师的职业素养</title>
      <link href="/2016/12/30/about-engineer/"/>
      <url>/2016/12/30/about-engineer/</url>
      
        <content type="html"><![CDATA[<p>在过去，工程师是一个极难获得的称谓，通常需要获取相应的学位，有多年的工作经验，甚至还要通过官方的考评，方能取得。那时的工程师，往往要承担着社会责任。比如，作为桥梁工程师，你设计了一座大桥，就得为大桥的质量负责，如果桥垮了，你是要跳河的。</p><p><img class="img-fluid" src="/images/about-engineer/01.jpg"> <br></p><p>然而，自互联网兴盛以来，出现了一大波“软件工程师”，也就是程序员，他们轻易获取了“工程师”的头衔，其中有些人毫无职业素养，毫无责任担当。当然，我并非想要贬低程序员，因为本人也是一个程序员，只是最近掉进坑了，满腹牢骚，愤懑不平，怨气冲天，才不得不作此文，吐槽以泄愤。</p><p><img class="img-fluid" src="/images/about-engineer/02.jpg" width="200px"> <br></p><p>在我看来，作为一名软件工程师，最基本职业素养就是专业技能，也就是编码和程序设计，其他的比如团队精神等等等这里就不多谈了，因为今天只想吐槽这么多。</p><p>首先来说说编码。作为一名合格的软件工程师，必须要明白代码的可维护性是多么重要，用来衡量可维护性的，首先是代码的可读性。有些人把代码写得别人看不懂，就飘飘然以为自己多牛逼多厉害。比如判断一个变量是否为 0，0 偏偏要写成 <code>intval(chr(48))</code>，等等等诸如此类不胜枚举，罄竹难书。殊不知这种行为愚蠢至极，过两年把他拉回来看自己的这些代码，他一定会抽自己嘴巴子，因为他自己也看不懂自己写了什么。</p><p>所以请记住：你的代码别人看不懂，只有外行人才会觉得你牛逼，同行都会说你傻逼。在编码的时候，一定要想一想，这么写别人能理解我的意图吗？代码要写得傻一点，这一点脚本语言工程师尤其要注意，不要滥用魔法特性。</p><p>再来扯扯程序设计。其实这一点跟代码的可读性有共通之处，程序设计的目的首先是满足业务需求，其次就是在满足业务需求的前提下保证代码的可维护性，也就是保证代码描述的业务逻辑容易被人理解。</p><p>偏偏有些人，自以为自己的设计高端大气上档次，一个缓存 key，存了 9999 条数据，我只想问，有一条数据更新了怎么办？</p><p>恭喜你，答错了。人家的做法不是把这 9999 条数据查出来重新 set（虽然这已经足够奇葩），而是把全表的数据查出来每 9999 条分批 set 一遍（奇葩中的奇葩）。除了数据更新，有新数据插入缓存也要全部更新一遍。哪天内存不够加载全表的数据了怎么办？没事啊，人家已经跑路了！人家跑路了项目怎么办？没事啊，有接盘侠啊！</p><p>没错，我就是这个接盘侠。昨天我花了一个晚上，把这波缓存改成了正常人的设计。2016年的最后两天，我接了一个盘，不过，我会接好这个盘。</p><p>我不入地狱，谁入地狱？</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吐槽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 mermaid 画甘特图</title>
      <link href="/2016/09/13/mermaid/"/>
      <url>/2016/09/13/mermaid/</url>
      
        <content type="html"><![CDATA[<p>今天发现了一个比较好用的画甘特图/流程图的工具：<a href="http://knsv.github.io/mermaid/" target="_blank" rel="noopener">mermaid</a>，官方的介绍是：</p><blockquote><p>“Generation of diagram and flowchart from text in a similar manner as markdown”。</p></blockquote><p>我说好是因为对程序员好，支持命令行操作并且是开源的，貌似还可以整合进 Markdown，不过我没找到相关的案例。</p><h3 id="使用在线工具绘制"><a href="#使用在线工具绘制" class="headerlink" title="使用在线工具绘制"></a>使用在线工具绘制</h3><p>mermaid 提供了一个<a href="http://knsv.github.io/mermaid/live_editor/" target="_blank" rel="noopener">在线编辑器</a>，可以迅速在线作图，下面是官方的 demo</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">A-&gt;&gt; B: Query</span><br><span class="line">B-&gt;&gt; C: Forward query</span><br><span class="line">Note right of C: Thinking<span class="built_in">..</span>.</span><br><span class="line">C-&gt;&gt; B: Response</span><br><span class="line">B-&gt;&gt; A: Forward response</span><br></pre></td></tr></table></figure><p>生成的效果是这样的:</p><p><img src="/images/mermaid/01.jpg" alt></p><p>再来一个甘特图的:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">dateFormat  YYYY-MM-DD</span><br><span class="line">title Shop项目交付计划</span><br><span class="line"></span><br><span class="line">section 里程碑 <span class="number">0.1</span> </span><br><span class="line">数据库设计          :active,    p1, <span class="number">2016</span><span class="number">-08</span><span class="number">-15</span>, <span class="number">3</span>d</span><br><span class="line">详细设计            :           p2, after p1, <span class="number">2</span>d</span><br><span class="line"></span><br><span class="line">section 里程碑 <span class="number">0.2</span></span><br><span class="line">后端开发            :           p3, <span class="number">2016</span><span class="number">-08</span><span class="number">-22</span>, <span class="number">20</span>d</span><br><span class="line">前端开发            :           p4, <span class="number">2016</span><span class="number">-08</span><span class="number">-22</span>, <span class="number">15</span>d</span><br><span class="line"></span><br><span class="line">section 里程碑 <span class="number">0.3</span></span><br><span class="line">功能测试            :       p6, after p3, <span class="number">5</span>d</span><br><span class="line">上线               :       p7, after p6, <span class="number">2</span>d</span><br><span class="line">交付               :       p8, afterp7, <span class="number">2</span>d</span><br></pre></td></tr></table></figure><p>生成的效果:</p><p><img src="/images/mermaid/02.jpg" alt></p><p>画甘特图可以参考官方的 <a href="http://knsv.github.io/mermaid/gantt.html" target="_blank" rel="noopener">Gantt语法文档</a>。</p><h3 id="使用命令行绘制"><a href="#使用命令行绘制" class="headerlink" title="使用命令行绘制"></a>使用命令行绘制</h3><p>由于 mermaid 使用 nodejs 写的，所以需要 node 环境，这个不多说，根据自己的平台安装好 node 即可。<br>安装 mermaid 一行命令搞定:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> -g phantomjs &amp;&amp; npm <span class="keyword">install</span> -g mermaid</span><br></pre></td></tr></table></figure><p>完成之后，就可以使用命令行了。<br>先新建一个文本文件，我们这里就来展示一个甘特图，所以命名 <code>demo.gantt</code>，当然，文件名随意起就好。<code>demo.gantt</code> 文件内容就用上面的甘特图的例子，然后使用命令：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mermaid demo<span class="selector-class">.gantt</span> -w <span class="number">1920</span> -s -<span class="selector-tag">p</span> -o images</span><br></pre></td></tr></table></figure><p>就可以在 <code>images</code> 目录下生成两个文件，一个是 <code>PNG</code> 图片，另一个是 <code>SVG</code> 矢量图。</p><p>可以用 <code>mermaid -h</code> 命令查看帮助，这里我贴上刚刚那条命令里用到的参数:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-s --svg       输出 SVG 替代 PNG（试验性的功能）。</span><br><span class="line">-p --png       如果选择保存 SVG，那么加上这个选项可以同时保存 PNG。</span><br><span class="line">-o --outputDir 保存文件的目录（如果不存在会自动创建），默认 `cwd`。</span><br><span class="line">-w --width     生成的 PNG 图片宽度。</span><br></pre></td></tr></table></figure><h3 id="整合进-Markdown"><a href="#整合进-Markdown" class="headerlink" title="整合进 Markdown"></a>整合进 Markdown</h3><p>事实上，已经有一些类似的工具被整合进 Markdown 了，比如著名的在线 Markdown 编辑器 <a href="https://maxiang.io/" target="_blank" rel="noopener">马克飞象</a> 采用了 <a href="http://flowchart.js.org/" target="_blank" rel="noopener">flowchart.js</a> 作为流程图引擎，但貌似这个 flowchart 是不支持 gantt 的，所以这里我也用不上。</p><p><del>至于 mermaid，由于我没有找到相关的案例，所以目前只能采用生成图片插入正文或者用在线编辑器生成链接插入这两种办法。</del></p><p>今天无意中在 V2EX 上看到一个帖子: <a href="http://cn.v2ex.com/t/300795" target="_blank" rel="noopener">一款很坂本的 Presentation 工具</a>，无意中发现这个 <code>用 Markdown 编写简洁优美的演示文稿</code> 的工具使用了 mermaid 作为流程图、甘特图的解析器。如果你要在 Markdown 中整合 mermaid，可以参考这个项目 <a href="https://github.com/tajpure/vortex" target="_blank" rel="noopener">vortex</a>。</p><h3 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h3><p>当然，在使用过程中也发现了一些问题，最大的一个就是甘特图日期中的假期排除。</p><p>由于我们每周一般只工作 5 天，所以这时候我要在甘特图中排除周末两天（计算工期需要），当然，如果可能，最好支持法定节假日。</p><p>然而官方文档中并没有提及这个功能，所以我找了一下，看到官方 issues 列表中已经有人提过了：<a href="https://github.com/knsv/mermaid/issues/314" target="_blank" rel="noopener">Gnatt Chart exclude weekends</a>，作者回应说 mermaid 是使用 <a href="https://d3js.org/" target="_blank" rel="noopener">d3js</a> 渲染的，所以应该是可以实现这个功能的。</p><p>不过貌似要靠我们自己了。。。因为作者的最后一句话是:</p><blockquote><p>Good luck! If you find a solution please post it here for reference.</p></blockquote><p>等我解决这个问题吧~ 😂😂😂</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么我要写 ResquePanel</title>
      <link href="/2016/06/03/about-resque-panel/"/>
      <url>/2016/06/03/about-resque-panel/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/Lucups/resque-panel" target="_blank" rel="noopener">ResquePanel</a> 是用于监控 <a href="https://github.com/chrisboulton/php-resque" target="_blank" rel="noopener">php-resque</a> 的一款 Web 界面工具。完全使用  PHP 开发。当然，由于 resque 的 “正版” 是 Ruby 写的，所以你也可以用来监控 Ruby 版的 resque。 </p><p>也许有人会说我造轮子，因为很容易可以在 GitHub 上搜到一个叫 <a href="https://github.com/wa0x6e/ResqueBoard" target="_blank" rel="noopener">ResqueBoard</a> 的项目，还有个非常漂亮的<a href="http://resqueboard.kamisama.me/" target="_blank" rel="noopener">介绍网页</a>，如图：</p><img class="img-fluid" src="/images/about-resque-panel/01.jpg" width="500px" title="ResqueBoard 官方介绍页"><p>可以看出来，作者花费了不少心思，前端做得也漂亮(我觉得这个前端堪称完美！)。所以刚开始我也用了这个，于是，发现了问题。</p><h3 id="ResqueBoard-的缺陷"><a href="#ResqueBoard-的缺陷" class="headerlink" title="ResqueBoard 的缺陷"></a>ResqueBoard 的缺陷</h3><p>首先是该项目依赖太多，除了 <code>Node.js</code> 的 <code>Cube</code>，另外还要装一个 MongoDB，最关键的还在于如果你需要使用作者改写过的 php-resque，这让人很是担心。虽然我毫不怀疑作者的人品，但要我把正在跑的一个项目依赖的库替换掉（因为与原项目冲突），还是有不少担心的。然后就是 Cube 依赖的一个叫 <code>websocket-server</code> 的项目已经不见了，导致 npm install 安装依赖失败，Google 了半天，最后在该项目的 GitHub Issue List 里找到解决方案，过程参见 <a href="https://segmentfault.com/q/1010000003990965" target="_blank" rel="noopener">npm install cube Error: No dist in websocket-server package</a>。折腾了半天，Cube 的两个进程跑起来了。最后就是替换项目里原来用的 php-resque，小心翼翼。配置了 Nginx 后终于跑起来了。 </p><p>跑起来后发现，首页是能看了，其他页面都有问题，一检查，发现 web 目录下有个 <code>.htaccess</code> 文件，一看尿了，rewrite 规则这么多！只能用 apache 了，于是又给服务器装了 apache，Nginx 做反代，搞了半天终于基本正常了，右上角显示的三个服务正常连接。再对照官方文档，完全正确了。</p><p>但是，跑了几天后，发现数据有问题。首先是很多数据完全获取不到，基本上除了看到队列、处理了多少个 Job，其他一切显示没有数据。这一点让我很是伤心。各种找原因，反复查看官方文档、Issue 列表，还是没找到问题。</p><p>我最终决定自己写一个，简单一点的。</p><h3 id="我菜我认怂"><a href="#我菜我认怂" class="headerlink" title="我菜我认怂"></a>我菜我认怂</h3><p>有人会说，明明是你自己菜，还怪人家太复杂！<br>我菜我认怂行不？<br>我并不否认 ResqueBoard 的价值，也并不怀疑作者的人品(不会故意给一个不好用的东西出来)。但是，作为一个<strong>产品经理</strong>(我觉得我更是一个产品经理)，我觉得无论是什么工具，做出来都是给人用的，既然给人用，就要考虑用户的感受。当然，对于开源软件，这一条并不适用，因为很多工具都是作者给自己用的，顺便开源出来，让用得上的人顺便用用。</p><p>其实，我不需要查看那么多指标，我只是想简简单单看看队列的情况而已，当然，如果可能，可以加一个 <code>Retry</code> 的功能。所以你也可以说，并不是 ResqueBoard 不好，而是不适合我。</p><h3 id="为什么造轮子"><a href="#为什么造轮子" class="headerlink" title="为什么造轮子"></a>为什么造轮子</h3><p>有人会问，那你为什么不向作者咨询一下，而是自己造个轮子？</p><p>首先我本人是一个不喜欢麻烦别人的人，如果有问题，我会尽一切可能自己解决，这事跟借钱一样，我宁愿向银行向支付宝借钱也不愿意向朋友借钱，像银行借钱只不过交点利息，向朋友借钱要交的就太多了。当然，这是我自己的观点，我只是自己不想做这个事，不代表我反对这个事。就好比我不会穿丝袜，但不反对别人穿，如果是美女穿，我还喜欢呢，哈哈！</p><p>跑题了。话说回来，我觉得 ResqueBoard 是一个好看但并不好用(或者说实用)的工具，首先是安装过程太折腾，限制条件太多，虽然功能强大，但对于使用 php-resque 作为队列的用户来说，并不是一个好的选择。(既然选择了 php-resque 作为队列服务，首先可以认为用户对队列的要求并不高，否则肯定选择更加强大更加完善的方案。)</p><p>所以，我在 ResquePanel 里使用的都是 PHPer 比较熟悉的技术，最“精深”的也只不过是 <a href="http://www.swoole.com/" target="_blank" rel="noopener">swoole</a> 实现的 WebSocket (外加一个 swoole 实现的 child process，其实没必要使用这个特性的，我只是为了尝试一下，也许会在正式版本中移除)，安装简单快捷，甚至都不用安装 HTTP Server。当然，代价就是功能没那么多，目前最核心的功能除了查看队列情况(包括 Queues/Workers/Jobs 的各种信息)外，还有一个 <code>Retry</code> 的功能，都是按照我们实际需要来开发的，所以比较简单实用。</p><h3 id="ResquePanel-的未来计划"><a href="#ResquePanel-的未来计划" class="headerlink" title="ResquePanel 的未来计划"></a>ResquePanel 的未来计划</h3><p>目前 ResquePanel 只是一个简单的查看 php-resque 队列运行情况的 web 界面工具，我计划将其发展成一个完整的队列工具，甚至包含一个微型的 MVC 框架，这样在某些场景下，可以完全依靠 ResquePanel 来解决问题，为开发者提供方便。</p><p>当然，以上只是美好的构想，也许由于我太懒会停更这个项目。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么我不用钢化膜</title>
      <link href="/2015/11/30/steel-film/"/>
      <url>/2015/11/30/steel-film/</url>
      
        <content type="html"><![CDATA[<p>钢化膜一定要做得易碎，这样手机摔在地上时，膜碎的概率要远远大于屏幕碎的概率：</p><p>—— 当用户拿起手机返现膜碎了屏没碎，会说，啊，我的钢化膜保护了手机，如果不是它，估计屏幕就要碎了！然后果断再买一块新的钢化膜。结果是用户消费了更多的钢化膜。</p><p>—— 反之，如果屏幕碎了膜没碎，用户会说，我擦，贴个膜没卵用！以后再也不贴了！结果是最后没人用钢化膜了。</p><p>所以，钢化膜一定要做得易碎，越容易碎越好！</p><p>PS: 当有人问我为什么不贴膜时，我想到了上面这段话。 : )</p><h3 id="2016年1月29日补记"><a href="#2016年1月29日补记" class="headerlink" title="2016年1月29日补记"></a>2016年1月29日补记</h3><p>一朋友看到此文后给我发来下面这张图片，以彰余智。</p><img class="img-fluid w-50" src="/images/steel-film/01.jpg" title>]]></content>
      
      
      
        <tags>
            
            <tag> phone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPCON 2015(北京站)之旅</title>
      <link href="/2015/06/17/phpcon-2015-beijing/"/>
      <url>/2015/06/17/phpcon-2015-beijing/</url>
      
        <content type="html"><![CDATA[<p>2014年 PHPCON 上海站举办前夕，老胡问我去不去，当时对这些会议不是很感冒(其实主要原因是没钱)，就没去，不过当时我们约定第二年一起去。到今年北京站举办前一个月，老胡发来链接，问我来否，我自然不想做一个放鸽子的人，领导 Allen 知悉后表示他也要去，于是买门票买车票不提。</p><p>6月6日早上到达北京，直奔会场，时间刚刚好。此行主要是为了见一见国内的 PHP 大牛的风采（其实我只熟悉两位嘉宾：惠新宸和韩天峰），顺便看看这些会议到底是一个什么样的情况(因为此前曾参加过南京的一个互联网沙龙，看到最后发现全是广告，所以印象极差——也许是因为免费的)。</p><p>先来张会议的日程：</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/01.jpg" title="会议日程"><p>首先开讲的是来自新浪微博的胡波，主要讲 Yaf/Yar 在微博里的使用情况——手机微博服务端这一块从 v4 升级到 v5 的坎坷过程。</p><p>由于我们正在使用 Yaf/Yar (后来用 Phalcon 替换了 Yaf)，所以胡波的内容让我们极是受用，忍不住多拍了几张现场 PPT (强调一下我一般很少拍照片的)：</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/02.jpg" title="Yaf/Yar 在微博里的使用情况"><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/03.jpg" title="Yaf/Yar 在微博里的使用情况"><p>这两张图说明了 v4 到 v5 升级过程中要解决的问题，跟我们产品 v2 到 v3 的升级非常类似。</p><p>我们产品 v2 版本为了求速度，用了我们比较熟悉的 <a href="http://symfony.com/" target="_blank" rel="noopener">Symfony2</a>，后来使用 <code>ab</code> 压测发现 QPS 极低，才 8 个左右，分析了一下代码执行时间，发现 Symfony2 框架启动时间太高，所以 v2.1 时 App 的接口部分换成了 <a href="https://github.com/laruence/yaf" target="_blank" rel="noopener">Yaf</a>，由于 Yaf 过于简洁，没有 ORM 之类的模块，从 v2.3 开始新的业务模块用 <a href="http://phalconphp.com/" target="_blank" rel="noopener">Phalcon</a>写，所以我们的 v2.x 版本用了3个框架。采用了 Yaf/Phalcon 的新的业务模块速度相对老的速度提升明显。</p><p>胡波的内容对我们从 v2.x 升级到 v3 有很大启发，不过后来由于我们的业务改变巨大，v3 核心基本上是一个新系统，所以只能部分实践。</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/04.jpg" title="Yaf/Yar 在微博里的使用情况"><p>使用扩展，这是性能提升的一部分。因为使用 C 系框架后，性能提升明显，所以这部分也没有实践，为了以后极致的性能提升备用吧。</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/05.jpg" title="Yaf/Yar 在微博里的使用情况"><p>使用 RPC 框架 <a href="https://github.com/laruence/yar" target="_blank" rel="noopener">Yar</a> 也是我们 v2.x 后来性能提升的一大原因。实际上，后来我们的主要业务全部在 RPC 里实现，大部分 Controller 只是充当一个过滤器/组装器的作用。当然由于 Windows 不支持 Concurrent 调用，导致我帮同事们一个个配环境(在我的推荐下使用了 <a href="https://www.vagrantup.com/" target="_blank" rel="noopener">Vagrant</a> + <a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a>)——当然这也是好事，全体开发人员的开发环境转向 <code>*nix</code> 系操作系统。</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/06.jpg" title="Yaf/Yar 在微博里的使用情况"><p>最后当然要说的就是坑啦！</p><p>说说 Phalcon 吧，其实我们最初使用的是 Phalcon v1.3.x，后来 v2.x 发布了(说是采用 <a href="http://zephir-lang.com/" target="_blank" rel="noopener">Zephir</a> 这种堪称 <strong><em>PHP外挂</em></strong> 的语言写的)，虽然明知有很多坑，但我们产品的 v3 到发布还有一段时间，并且 Phalcon 的 v2.x 与  v1.x 仅仅只有两处不兼容，代码稍微改一下就可以用 v1.3.x 了，所以我们果断上新版。</p><p>新版果然坑，被坑得印象最深刻的两次果断被我记录下来了，如下： </p><h4 id="1-find-绑定数组问题"><a href="#1-find-绑定数组问题" class="headerlink" title="1. find 绑定数组问题"></a>1. find 绑定数组问题</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$array = [<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>]; </span><br><span class="line">$robots = Robots::find(</span><br><span class="line">    <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'letter IN (&#123;letter:array&#125;)'</span>,</span><br><span class="line">        <span class="string">'bind'</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'letter'</span> =&gt; $array</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>这段代码有些人在运行时报错: <code>Scanning error before &#39;letter:array})&#39; when parsing...</code>，问题就在于这个特性是 Phalcon 2.0.5 才有的，如果版本低于 2.0.5 的话，就会报错，因为还没有这个特性。<br>解决办法就是更新你的 Phalcon，下载地址: <a href="https://phalconphp.com/zh/download" target="_blank" rel="noopener">Download Phalcon</a>。</p><p>当时我被文档上这段代码弄郁闷了好久，我写得明明很正确，但却报错，找了半天中文字符/特殊字符，最后无意一撇文档版本是 2.0.5，貌似记得前两天更新的时候是 2.0.4，一查果然！话说新增这大的一个特性应该放在 2.1 里吧，0.0.1 个版本更新至于嘛。。。</p><h4 id="2-Model-save-方法更新失败不报错不抛异常"><a href="#2-Model-save-方法更新失败不报错不抛异常" class="headerlink" title="2. Model save 方法更新失败不报错不抛异常"></a>2. Model save 方法更新失败不报错不抛异常</h4><p>如果你的表里面有个字段是 not null，而在更新这个 entity 的时候你不小心设置了该字段为 null，那么你的数据将 save 不进去，这不算坑，但不抛异常不报错这也太坑了吧！</p><p>好吧，扯太远了，继续我们的 PHPCON，这时候有个人上来讲了关于 PHP 安全编程的内容，前面一部分耳熟能详，后面一部分没认真听，因为看到漂亮妹子了！</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/07.jpg" title="美女"><p>哎，要是公司的女同事们都这样多好······</p><p>下午的时候见到了<a href="http://rango.swoole.com/" target="_blank" rel="noopener">韩天峰</a>，由于上午拍了太多照片，下午没电了，就没拍照片。</p><p><a href="http://rango.swoole.com/" target="_blank" rel="noopener">韩天峰</a>是个喜欢开挂的人，他的 <a href="http://www.swoole.com/" target="_blank" rel="noopener">Swoole</a> 就是 PHP 的一个外挂，赋予了 PHP 开发<code>异步、并行、高性能网络通信框架</code>的能力。还是用 Swoole 官网的介绍吧：</p><blockquote><p>PHP语言的异步、并行、高性能网络通信框架，使用纯C语言编写，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。</p></blockquote><blockquote><p>Swoole可以广泛应用于互联网、移动通信、企业软件、云计算、网络游戏、物联网、车联网、智能家居等领域。 使用PHP+Swoole作为网络通信框架，可以使企业IT研发团队的效率大大提升，更加专注于开发创新产品。</p></blockquote><p>我之前听说这个人是因为<a href="https://github.com/bixuehujin" target="_blank" rel="noopener">老胡</a>，当时他向 Swoole 提交了一些代码，加入了开发组，这才了解到韩天峰。不过老胡这个人天性寡言，不善言辞，不过很有天赋，技术扎实，沉得下心，我从他身上看到了爱因斯坦的影子。</p><blockquote><p>PS：这里本来放了一张老胡的照片，在老胡的强烈抗议下移除掉了。。。</p></blockquote><p>整个会议的两天，在我一再地怂恿下，他都没去跟韩天峰打个招呼。老胡也曾跟我坦白，说自己说话的时候总慢半拍，所以面试很吃亏。其实看<a href="https://github.com/bixuehujin" target="_blank" rel="noopener">老胡的 Github</a> 就知道老胡的水平，进 BAT 绝对不是问题。</p><p>又扯远了，算了，我跟韩天峰也不熟，但他的 Swoole 其实我很感兴趣，我们公司也有人在用，做了一个主动推送更新的考勤机，我这部分业务没用到。等以后有机会用的时候再来一篇感概吧。</p><p>第一天结束后去了天安门，时值大雨，广场上的行人到卫兵的伞下躲雨，被卫兵驱赶，有个小卫兵叫我大叔，同行的老胡和 Allen 都快笑尿了。。。我只想说，你 TMD 怎么不叫大爷？</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/08.jpg" title="彩虹"><p>回程的路上看到彩虹，我大叫一声，行人纷纷抬头，举机拍照。</p><p>第二天，终于看到了传说中的鸟哥，真名惠新宸，ID是 Laruence，好吧，我承认之前一直以为是 Laurence…<br>鸟哥说他昨天喝多了，头疼，中场休息的时候我在酒店门抽烟，突然发现鸟哥就在旁边，原来鸟哥。。。，以后戒烟的理由又少了一个。。。哎！ </p><p>上照片：</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/09.jpg" title="鸟哥"><p>鸟哥开场照。</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/10.jpg" title="鸟哥"><p>这一张是现场表演写代码，演示 PHP7 的一些新特性。</p><p>Laurence 的演讲分为两部分，先是 PHP7 的一些新特性以及弃用的一些东西，简单说了一下如何将代码迁移到新版本；然后就是性能。这也是他在 PHP 项目组中的主要工作。根据他自己测试的数据，7的性能提升确实明显，已经达到跟 HHVM 不相上下的程度，瞬间甩开 Python、Ruby 好大一截。目测 PHP 程序员工资要涨的节奏啊！</p><p>结束的时候鸟哥回顾了一下成长经历，对我等深有启发。</p><p>下午场主要是关于 SAE(Sina App Engine) 和程序员职业生涯的一段介绍，没怎么仔细听。</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/11.jpg" title="圆桌会议"><p>最后是圆桌会议，听听前辈们的对于 PHP 看法。嘉宾都被问到为什么选择了 PHP，韩天峰回答，因为只有 PHP 的环境被我配起来了。果然是世界上最好的语言！（PS: 其实我的真爱是 Ruby。。。也许正是这个原因，两天的抽奖都没抽到我。）</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/12.jpg" title><p>晚上离开北京，在广场上，八点整，响起了一段伴随着钟声的音乐，Allen 问我，这是什么钟声？我不知道，答：丧钟为谁而鸣？</p><p>Allen 道：仔细听，这叫《东方红》。</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/13.jpg" title><p>我环顾广场一圈，看着背包上的 PHP 吉祥物道：感觉回到了七十年代。</p><img class="img-fluid" width="500px" src="/images/phpcon-2015-beijing/14.jpg" title><p>–</p><p>附一个现场视频 <a href="http://www.imooc.com/learn/469" target="_blank" rel="noopener">Think 2015 PHP 技术峰会(北京站）</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 PHPStorm 中使用 region （代码折叠）</title>
      <link href="/2014/01/24/phpstrom-region/"/>
      <url>/2014/01/24/phpstrom-region/</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用 VS 写 C# 的人都很喜欢 <strong>#region</strong> 实现的代码折叠功能。PHP 本身没有类似的功能，但作为一个 PHPer，肯定不甘在这一点上示弱。本文就介绍使用史上最强大 PHP IDE —— PHPStorm 实现代码折叠（注：不一定是一个函数或一个类的）。</p></blockquote><p>其实前面废话说了这么多，正文就只有三行：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//region description</span></span><br><span class="line"><span class="function"><span class="title">code</span></span>....</span><br><span class="line"><span class="comment">//endregion</span></span><br></pre></td></tr></table></figure><p>有人要说没图你说个 Smartisan，好，我就贴个图：</p><ol><li><p>展开效果图：<br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fr26txr8rzj30im09fq3b.jpg" alt="展开的图"></p></li><li><p>折叠效果图：<br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fr26u2ewg8j30ah01l741.jpg" alt="折叠的图"></p></li></ol><p><strong>注：只在 PHPStorm 下有效。当然，不仅支持 PHP 代码，也支持 js 代码。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的Linux发行版/桌面环境选择之路</title>
      <link href="/2013/11/30/the-road-of-my-linux-dist/"/>
      <url>/2013/11/30/the-road-of-my-linux-dist/</url>
      
        <content type="html"><![CDATA[<p>一个年轻程序员折腾 Linux 桌面的流水账。。。</p><a id="more"></a><h1 id="2013年"><a href="#2013年" class="headerlink" title="2013年"></a>2013年</h1><h4 id="3月份-Unity"><a href="#3月份-Unity" class="headerlink" title="3月份 Unity"></a>3月份 Unity</h4><p>这个时间用的是Ubuntu 12.10，默认的Unity界面，稳定性一般，最不习惯的是，窗口操作按钮（最小化最大化关闭）在左上角，用惯了Windows的我很不习惯。然后就是，Unity的菜单很炫，但不幸的是，09年的ThinkPad R400表示反应有点迟钝，所以我决定换个不那么炫的桌面环境。</p><h4 id="4-7月份-KDE-4"><a href="#4-7月份-KDE-4" class="headerlink" title="4~7月份 KDE 4"></a>4~7月份 KDE 4</h4><p>这几个月先是在原来Ubuntu 12.10装了KDE 4、BlackBox、Xfce、GNome 3，都折腾了一遍之后，决定使用 KDE 4。KDE 4的优点就是插件多，使用习惯类似Windows，然后就是默认的资源管理器功能强大，远超Unity。</p><p>不选GNome3的原因是，感觉跟Unity有点像（个人觉得本质上区别不大，按下WinKey，机械硬盘就会表示压力很大），至于其他的几个，都感觉上个世纪来的。这时候Ubuntu13.04来了，于是直接下了个Kubuntu装了。</p><h4 id="8月份-回归Unity"><a href="#8月份-回归Unity" class="headerlink" title="8月份 回归Unity"></a>8月份 回归Unity</h4><p>时间一长，就发现Kubuntu的不好了。主要还是Ubuntu的原罪——每次开机都会提示一个错误，永远修复不了。然后就是KDE本身的一些问题，比如对多屏支持不好（我费了好大力气解决的），然后就是发现KDE并不是那么漂亮、精致。</p><p>8月份离开前公司，换系统，又换回了Ubuntu，换回了Unity。</p><h4 id="9-11月份-Linux-Mint（Cinnamon）"><a href="#9-11月份-Linux-Mint（Cinnamon）" class="headerlink" title="9~11月份 Linux Mint（Cinnamon）"></a>9~11月份 Linux Mint（Cinnamon）</h4><p>9月份来到现在的公司，无意中发现Unity的一个重大Bug，就是鼠标按着拖来拖去时可能导致图形界面崩溃——即时升级到13.10，等Bug修复不知何年何月，再加上对Unity的种种不满，于是，决心放弃Ubuntu。</p><p>又开始折腾，这时已经相对来讲比较熟悉Linux了，于是尝试使用Debian——终于还是被驱动击败了。。。Debian都搞不定，更别提Gentoo了，于是，还是回到Ubuntu系上。</p><p>找来找去，无意中尝试了一下Linux Mint（其实我还在下载的时候，并没有报任何希望，因为感觉Linux Mint的官网略显。。。寒酸），使用的Cinnamon桌面环境，一切都是那么美好~~适合我多年的Windows下的习惯，又满足了我对Terminal的需求，至于稳定性，还需要时间去验证，至少目前来看，不输于Unity。最终选定Linux Mint（Cinnamon桌面环境）。</p><h4 id="2013-12-1更新"><a href="#2013-12-1更新" class="headerlink" title="2013.12.1更新"></a>2013.12.1更新</h4><p>前几日给笔记本换了块硬盘，装了Fedora19。感觉GNOME3还是不错的。不过我主要的目的是尝试一下yum。我觉得貌似 Fedora 比 Ubuntu 要快那么一点点。。。难道是我的错觉？</p><h1 id="2014年"><a href="#2014年" class="headerlink" title="2014年"></a>2014年</h1><h4 id="2014-3-12更新"><a href="#2014-3-12更新" class="headerlink" title="2014.3.12更新"></a>2014.3.12更新</h4><p>折腾了一年的 Linux桌面，最终还是找不到一个稳定又好用且漂亮的，最终还是在新年到来之前回归了 Win7，还特别安装了 <strong>Cygwin</strong> 以及 <strong>Gow</strong>，让好用的 grep 等命令保留下来。Win7终归是“温妻”啊！</p><h4 id="2014-5-29更新"><a href="#2014-5-29更新" class="headerlink" title="2014.5.29更新"></a>2014.5.29更新</h4><p>3月底入手 ThinkPad X240 后，开始转到 Win8.1，这个过程还好，尤其是 X240 的触控板，在 Windows 下很好用，在 Linux 下很不好用，没办法，没有驱动的支持，再牛叉的硬件也是扯淡啊。</p>]]></content>
      
      
      <categories>
          
          <category> 杂的文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于使用 Symfony2 开发时遇到的一个诡异的 bug</title>
      <link href="/2013/10/18/bug01/"/>
      <url>/2013/10/18/bug01/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>最近在使用symfony 2开发，处于刚入门阶段。昨天完成了注册登录模块，开发阶段一直没有问题，快完成时诡异的错误出现了：注册成功后，查询数据表，记录存在，但登录始终报错。由于登录是使用symfony2自带的安全框架，又不知道 symfony2有什么debug的好方法，所以只能检查代码，继续读symfony2文档，因为之前做过登录注册模块，所以对配置什么的还是蛮有信心，确信不会错，搞了半天不知道问题在哪。注册成功，登录始终不成功。</p><h3 id="衣带渐宽终不悔，为-bug-消的人憔悴"><a href="#衣带渐宽终不悔，为-bug-消的人憔悴" class="headerlink" title="衣带渐宽终不悔，为 bug 消的人憔悴"></a>衣带渐宽终不悔，为 bug 消的人憔悴</h3><p>最后还是同事过来，问我用什么加密，然后试图寻找登录加密与注册加密的结果是否一致。不成功，因为login的过程完全由symfony来完成的，查文档一时又找不到login具体的代码，最后，我们找了一个在线加密网站，比对加密结果和注册加密结果是否一致，最后结果是一致。。。蛋疼！尼妈这错太诡异了！难道真要我这个刚入门的去看框架源码？？？</p><h3 id="众里寻bug千百度，蓦然回首，bug-却在灯火阑珊处"><a href="#众里寻bug千百度，蓦然回首，bug-却在灯火阑珊处" class="headerlink" title="众里寻bug千百度，蓦然回首，bug 却在灯火阑珊处"></a>众里寻bug千百度，蓦然回首，bug 却在灯火阑珊处</h3><p>正当我垂头丧气心如死灰批头散发郁闷的要死的时候，突然！眼前一亮！为什么网站上加密结果的最后是两个等号而数据库里面的没有等号？？？！！！我擦，终于找到了！经过测试，发现快完成的时候改用了架构师设计的数据库，password字段长度只有50,而我之前设计的是255,且密码在采用sha512算法加密后长度大于50,导致写入数据库的只有前面的50个字符，所以我开始比对的时候竟然没有发现这个问题。。。（我看开头几位都一样就没有关注后面的。。。）！！！而我的印象里，如果字符串大于数据库设计的长度应该是要报错的，所以要么是mysql截取了，要么是symfony截取了，具体原因等下次再研究吧。。。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次愉快的 bug 修复经历</title>
      <link href="/2013/10/11/bug02/"/>
      <url>/2013/10/11/bug02/</url>
      
        <content type="html"><![CDATA[<p>使用 jQuery 插件 Jcrop 裁剪图片时，发现一个问题，如图：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fr26ehqgj2j30ek0eg0tw.jpg" alt="Bug of Jcrop"></p><p>不知道这里的 radio 哪里来的，很郁闷，因为以前用过一次，没遇到这个问题。<br>到 stackoverflow 上查了也没有类似的问题。<br>没办法，只好上官网留言问作者。<br>英语不太好，只能勉强描述问题：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">"radio"</span> <span class="attribute">class</span>=<span class="string">"jcrop-keymgr"</span> <span class="attribute">style</span>=<span class="string">"position: fixed; left: -120px; width: 12px; display: inline-block;"</span>&gt;</span><br></pre></td></tr></table></figure><blockquote><p>There is a strange radio input in my page, I don’t know where it comes from, I think you can help me.<br>If you can give me your email address, I will send the pictue to you.</p></blockquote><p>几个小时候，收到了作者的回复:</p><blockquote><p>Hi… I think the option to turn that off is keySupport: false…<br>I have a new version that is completely rewritten, and much better…<br>Check “WIP-2.x” branch on github.<br>Should allow keyboard support without the (supposed to be hidden) radio input…<br>Documentation in progress…but should be similar in most cases.</p></blockquote><p>作者很热心，不仅提供了解决方案，还告诉我新版本完全重写，非常好~<br>我尝试了一下，在代码中加了 <code>keySupport: false</code>，OK，问题解决。<br>这个作者太厚道了，我对他的景仰如同滔滔黄河之水天上来。。。（后面省略1000字）<br>立马回复作者：</p><blockquote><p>Hi ! Thank you for your reply.<br>With your help, I have successfully solved the problem.<br>With thanks again and best wishes to you !</p></blockquote><p>最后不得不感叹一句，这个作者真棒！</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
